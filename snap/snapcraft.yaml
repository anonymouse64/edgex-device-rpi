name: edgex-device-rpi
base: core18
version: '0.1'
summary: Connect to GPIO pins on RasPi with EdgeX
description: |
  The EdgeX Device RaspberryPi Service is developed to control/communicate 
  with sensors connected the GPIO pins on a RaspberryPi

architectures:
  - build-on: arm64
    run-on: arm64
  - build-on: armhf
    run-on: armhf

grade: stable
confinement: strict

# ideally snapcraft would generate this command-chain spec for the hooks
# automatically, but that doesn't currently seem to work, see
# https://bugs.launchpad.net/snapd/+bug/1824255
# in the meantime, make sure that the snapcraft-runner gets generated by 
# the apps by specifying the full adapter, and manually craft the 
# command-chain for the configure hook here
# all of this is necessary so we can use jq from the snap inside the configure
# hook
passthrough:
  hooks:
    configure:
      command-chain:
      - snap/command-chain/snapcraft-runner

apps:
  daemon:
    command: bin/daemon.sh
    adapter: full
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind
      - gpio
  edgex-device-rpi:
    adapter: full
    command: bin/device-rpi
    plugs:
      - home
      - removable-media
      - network
      - network-bind
      - gpio

parts:
  snap-wrappers:
    source: snap/local
    plugin: dump
  examples:
    source: .
    plugin: dump
    organize:
      LICENSE: usr/share/doc/edgex-device-rpi/LICENSE
    prime: 
      - examples/*
      - usr/share/doc/edgex-device-rpi/LICENSE
    stage: 
      - examples/*
      - usr/share/doc/edgex-device-rpi/LICENSE
  stage-patches:
    source: .
    after: [examples]
    plugin: dump
    organize:
      LICENSE: usr/share/doc/edgex-device-rpi/LICENSE
    prime: [-*]
    stage: [scripts/rpi_patch]
  libmraa:
    source: https://github.com/intel-iot-devkit/mraa.git
    source-commit: d320776
    plugin: cmake
    configflags:
      - -DBUILDSWIG=OFF
    after: [stage-patches]
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      patch -p1 < $SNAPCRAFT_STAGE/scripts/rpi_patch
      snapcraftctl build
    prime:
      - lib/libmraa*
    build-packages:
      - g++
  tomlc99:
    source: https://github.com/IOTechSystems/tomlc99.git
    source-tag: SDK-0.2
    source-depth: 1
    plugin: dump
    organize:
      toml.c: src/c/toml.c
      toml.h: src/c/toml.h
    stage:
      - src/c
    prime: [-*]
  iotech-c-utils:
    source: https://github.com/IOTechSystems/iotech-c-utils.git
    source-tag: v0.1.3
    source-depth: 1
    plugin: dump
    stage: 
      - src/c/scheduler.c
      - src/c/logging.c
      - include/iot
    prime: [-*]
  c-thread-pool:
    source: https://github.com/IOTechSystems/C-Thread-Pool.git
    source-tag: SDK-0.1
    source-depth: 1
    plugin: dump
    organize:
      thpool.c: src/c/thpool.c
      thpool.h: include/thpool.h
    stage:
      - src/c/thpool.c
      - include/thpool.h
    prime: [-*]
  device-sdk-c:
    after: 
      - tomlc99
      - c-thread-pool
      - iotech-c-utils
    plugin: cmake
    configflags: 
      - -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - -DCMAKE_BUILD_TYPE=Release
    source: https://github.com/edgexfoundry/device-sdk-c.git
    source-branch: delhi
    source-subdir: src
    override-build: |
      # copy all of the dep sources from $SNAPCRAFT_STAGE into the build folder
      cd $SNAPCRAFT_PART_SRC
      cp -r $SNAPCRAFT_STAGE/src/c/* src/c/
      cp -r $SNAPCRAFT_STAGE/include/* include/
      snapcraftctl build
    build-packages:
      - libcurl4-openssl-dev
      - libmicrohttpd-dev
      - libyaml-dev
  edgex-device-rpi:
    source: .
    plugin: cmake
    source-subdir: src/c
    after: 
      - device-sdk-c
      - libmraa
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
  pkgs:
    plugin: nil
    stage-packages:
      - libcurl4-openssl-dev
      - libmicrohttpd-dev
      - libyaml-dev
      - curl
      - jq
