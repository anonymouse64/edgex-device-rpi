name: "RPi_Example"
manufacturer: "EdgeX Foundry"
model: ""
labels:
- "Example using GPIO on a Raspberry Pi"
description: "Control an LED and PIR sensor from a RaspberryPi"
deviceResources:
- name: LED
  description: "Turn the LED to On/Off"
  attributes:
    { Pin_Num: "11", Interface: "GPIO", Type: "OUT" }
  properties:
    value:
      { type: "Bool", readWrite: "RW", size: "1", minimum: "0", maximum: "1", defaultValue: "0" }
    units:
      { type: "String", readWrite: "R", defaultValue: "Enabled/Disabled" }

- name: MotionState
  description: "HIGH when motion is detected and LOW when absent"
  attributes:
    { Pin_Num: "7", Interface: "GPIO", Type: "IN" }
  properties:
    value:
      { type: "Uint8", readWrite: "RW", size: "1", minimum: "0", maximum: "1", defaultValue: "0" }
    units:
      { type: "String", readWrite: "R", defaultValue: " " }

resources:
- name: Set_Led
  set:
  - { operation: "set", object: "LED", property: "value", parameter: "LED" }

- name: Get_MotionState
  get:
  - { operation: "get", object: "MotionState", property: "value", parameter: "MotionState" }

commands:
- name: Set_Led
  put:
    path: "/api/v1/device/{deviceId}/Set_Led"
    parameterNames: ["LED"]
    responses:
    - code: "204"
      description: "valid and accepted"
      expectedValues: []
    - code: "400"
      description: "bad request"
      expectedValues: []
    - code: "503"
      description: "service unavailable"
      expectedValues: []

- name: Get_MotionState
  get:
    path: "/api/v1/device/{deviceId}/Get_MotionState"
    responses:
    - code: "200"
      description: "valid and accepted"
      expectedValues: ["MotionState"]
    - code: "503"
      description: "service unavailable"
      expectedValues: []


